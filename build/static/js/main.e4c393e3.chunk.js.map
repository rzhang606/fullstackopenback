{"version":3,"sources":["components/People.js","components/Filter.js","components/Notification.js","components/Error.js","components/FormField.js","components/Togglable.js","components/LoginForm.js","components/PersonForm.js","services/Persons.js","services/Login.js","App.js","index.js"],"names":["People","persons","filter","deleteHandler","newPersons","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","input","inputHandler","value","onChange","Notification","message","className","Error","FormField","title","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","buttonLabel","children","LoginForm","login","username","setUsername","password","setPassword","onSubmit","event","preventDefault","console","log","target","type","PersonForm","user","publishPerson","newName","setNewName","newNumber","setNewNumber","baseURL","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","remove","delete","update","put","setToken","newToken","creds","res","App","setPersons","newFilter","setNewFilter","setUser","notif","setNotif","error","setError","loginService","window","localStorage","setItem","JSON","stringify","personService","createError","useEffect","numbers","loggedUserJSON","getItem","parse","refresh","result","createNotif","setTimeout","nPerson","duplicate","length","alert","confirm","catch","err","concat","delName","find","element","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4c393e3.chunk.js","sourcesContent":["import React from 'react'\n\nconst People = ({persons, filter, deleteHandler}) => {\n    let newPersons = persons;\n    if(filter !== \"\") {\n        newPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())); \n    }\n    return (\n        <div>\n            {newPersons.map((person) =>\n                <p key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => deleteHandler(person.id)}>delete</button>\n                </p>\n            )}\n        </div>\n    )\n}\n\nexport default People","import React from 'react'\n\nconst Filter = ({input, inputHandler}) => {\n    return (\n        <form>\n            <div>\n                Filter by name: <input value={input} onChange={inputHandler}/>\n            </div>\n        </form>\n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst Notification = ({message}) => {\n    if(message === null) {\n        return null;\n    }\n\n    return (\n        <div className='notification'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react'\n\nconst Error = ({message}) => {\n    if(message === null) {\n        return null;\n    }\n\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Error;","import React from 'react'\n\nconst FormField = ({title, input, inputHandler}) => {\n    return (\n        <div>\n            <p>\n                {title}: \n                <input value={input} onChange={inputHandler}/>\n            </p>\n        </div>\n    )\n}\n\nexport default FormField","import React, { useState } from 'react';\n\nconst Togglable = (props) => {\n    const [ visible, setVisible ] = useState(false);\n\n    //inline css\n    const hideWhenVisible = { display: visible ? 'none' : ''}\n    const showWhenVisible = { display: visible ? '' : 'none'}\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    }\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>Cancel</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Togglable;","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\n\nconst LoginForm = ({login}) => {\n    const [ username, setUsername ] = useState(''); // form input username\n    const [ password, setPassword ] = useState('');\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        console.log('Logging in for', username, password);\n\n        login({\n            username: username,\n            password: password\n        });\n\n        setUsername('');\n        setPassword('');\n    }\n\n    return (\n        <Togglable buttonLabel='Login here'>\n            <form onSubmit={handleLogin}>\n                <FormField title={'Username'} input={username} inputHandler={handleUsernameChange}/>\n                <FormField title={'Password'} input={password} inputHandler={handlePasswordChange}/>\n                <button type='submit'>Login</button>\n            </form>\n        </Togglable>\n    )\n}\n\nexport default LoginForm","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\n\nconst PersonForm = ({user, publishPerson}) => {\n    const [ newName, setNewName ] = useState(''); // form input name\n    const [ newNumber, setNewNumber ] = useState(''); // form input number\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const createPerson = (event) => {\n        event.preventDefault();\n        publishPerson({ //pass state to parent to handle actual submission\n            name: newName,\n            number: newNumber\n        });\n\n        setNewName('');\n        setNewNumber('');\n\n    }\n    \n    return (\n        <Togglable buttonLabel='Create New Note'>\n            <h2>Add New as {user.name}:</h2>\n            <form onSubmit={createPerson}>\n                <FormField title=\"Name\" input={newName} inputHandler={handleNameChange} />\n                <FormField title=\"Number\" input={newNumber} inputHandler={handleNumberChange} />\n                <div>\n                <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </Togglable>\n    )\n}\n\nexport default PersonForm","import axios from 'axios';\nconst baseURL = '/api/persons'; //proxy redirects (from package.json)\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    console.log('Getting all from server ... ');\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseURL, newObject, config);\n    return response.data;\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseURL}/${id}`);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {getAll, create, remove, update, setToken}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async creds => {\n    const res = await axios.post(baseUrl, creds);\n    return res.data;\n}\n\nexport default { login };","import React, { useState, useEffect } from 'react'\nimport People from './components/People'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport PersonForm from './components/PersonForm'\n\nimport personService from './services/Persons'\nimport loginService from './services/Login'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]);\n    const [ newFilter, setNewFilter ] = useState(''); // filter\n\n    const [ user, setUser ] = useState(null);\n\n    const [ notif, setNotif ] = useState(null); // notification message\n    const [ error, setError ] = useState(null); // error message\n\n    /**\n     * Event Handlers\n     */\n\n    const publishPerson = (nPerson) => {\n        \n        const duplicate = persons.filter(person => person.name === nPerson.name);\n        if(duplicate.length !== 0) { //if record exists\n            if(duplicate[0].number === nPerson.number) { //duplicate\n                window.alert(`${nPerson.name} is already added to phonebook.`);\n            } else { //update number\n                const confirmation = window.confirm(`Update ${nPerson.name}'s number with ${nPerson.number}?`);\n                if(confirmation) {\n                    console.log('Updating new number');\n                    personService.update(duplicate[0].id, nPerson).then( result => {\n                        createNotif(`${nPerson.name}'s number has been updated`);\n                        refresh();\n                    }).catch(err => {\n                        createError(`${nPerson.name} could not be updated: ${err.response.data}`)\n                    });\n                }\n            }\n        } else {    // add new record\n            personService.create(nPerson).then(result => {\n                setPersons(persons.concat(result));\n                createNotif(`${nPerson.name} has been added`);\n                refresh();\n            }).catch(err => {\n                console.log(err);\n                createError(`${nPerson.name} could not be added: ${err.response.data}`);\n            });\n        }\n    }\n\n    const handleDelete = (id) => {\n        const delName = (persons.find(element => element.id === id)).name;\n        const result = window.confirm(`Delete ${delName}'s record?`);\n        if(result) {\n            console.log('Delete: ', id, delName);\n            personService.remove(id).then(request => {\n                refresh();\n            });\n        }\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value);\n    }\n\n    //uses username and password to login, then saves the retrieved token and user details to 'user' field\n    const login = async (creds) => {\n\n        try{\n            const user = await loginService.login(creds);\n\n            //save token to local storage\n            window.localStorage.setItem(\n                'loggedPersonUser', JSON.stringify(user)\n            );\n            personService.setToken(user.token);\n            setUser(user);\n        } catch (ex) {\n            createError('Wrong credentials');\n        }\n\n        \n    } \n\n    /**\n     * Effects\n     */\n    //initial fetching of persons\n    useEffect(() => {\n        console.log('Fetching data ... ');\n        personService\n            .getAll()\n            .then(numbers => {\n                setPersons(numbers);\n            })\n    }, []) // empty array tells it to only run initially\n\n    //check for logged in user\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedPersonUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n            personService.setToken(user.token)\n        }\n    }, [])\n\n    /**\n     * Helpers\n     */\n    const refresh = () => {\n        personService.getAll().then(result => {\n            setPersons(result);\n        });\n    }\n\n    const createNotif = (message) => {\n        setNotif(message);\n        setTimeout(() => {setNotif(null)}, 5000) // 2 seconds\n    }\n\n    const createError = (message) => {\n        setError(message);\n        setTimeout(() => {setError(null)}, 5000);\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notif}/>\n            <Error message={error} />\n            {user === null ? \n                <LoginForm login={login} />\n                : <PersonForm user={user} publishPerson={publishPerson}/>}\n            <h2>Numbers</h2>\n            <People persons={persons} filter={newFilter} deleteHandler={handleDelete} />\n            <Filter input={newFilter} inputHandler={handleFilterChange}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render( <App/>, document.getElementById('root') );"],"sourceRoot":""}