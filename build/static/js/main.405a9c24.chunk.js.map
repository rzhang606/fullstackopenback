{"version":3,"sources":["components/FormField.js","components/People.js","components/Filter.js","services/Persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["FormField","title","input","inputHandler","value","onChange","People","persons","filter","deleteHandler","newPersons","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","baseURL","console","log","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notif","setNotif","error","setError","useEffect","personService","numbers","refresh","result","refreshAll","createNotif","setTimeout","createError","event","target","onSubmit","preventDefault","personObj","duplicate","length","window","alert","confirm","catch","err","concat","type","find","element","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.405a9c24.chunk.js","sourcesContent":["import React from 'react'\n\nconst FormField = ({title, input, inputHandler}) => {\n    return (\n        <div>\n            <p>\n                {title}: \n                <input value={input} onChange={inputHandler}/>\n            </p>\n        </div>\n    )\n}\n\nexport default FormField","import React from 'react'\n\nconst People = ({persons, filter, deleteHandler}) => {\n    let newPersons = persons;\n    if(filter !== \"\") {\n        newPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())); \n    }\n    return (\n        <div>\n            {newPersons.map((person) =>\n                <p key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => deleteHandler(person.id)}>delete</button>\n                </p>\n            )}\n        </div>\n    )\n}\n\nexport default People","import React from 'react'\n\nconst Filter = ({input, inputHandler}) => {\n    return (\n        <form>\n            <div>\n                Filter by name: <input value={input} onChange={inputHandler}/>\n            </div>\n        </form>\n    )\n}\n\nexport default Filter;","import axios from 'axios';\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n    console.log('Getting all from server ... ');\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseURL}/${id}`);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {getAll, create, remove, update}","import React from 'react'\n\nconst Notification = ({message}) => {\n    if(message === null) {\n        return null;\n    }\n\n    return (\n        <div className='notification'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react'\n\nconst Error = ({message}) => {\n    if(message === null) {\n        return null;\n    }\n\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport FormField from './components/FormField'\nimport People from './components/People'\nimport Filter from './components/Filter'\nimport personService from './services/Persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]);\n    const [ newName, setNewName ] = useState(''); // form input name\n    const [ newNumber, setNewNumber ] = useState(''); // form input number\n    const [ newFilter, setNewFilter ] = useState(''); // filter\n    const [ notif, setNotif ] = useState(null); //notification\n    const [ error, setError ] = useState(null); // error\n\n    //event handlers\n    const handleNameChange = (event) => {\n        console.log(event.target.value);\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(event.target.value);\n        setNewNumber(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //check if newName exists already\n        const personObj = {\n            name: newName,\n            number: newNumber\n        };\n        const duplicate = persons.filter(person => person.name === newName);\n        if(duplicate.length !== 0) { //if record exists\n            if(duplicate[0].number === newNumber) { //duplicate\n                window.alert(`${newName} is already added to phonebook.`);\n            } else { //update number\n                const confirmation = window.confirm(`Update ${newName}'s number with ${newNumber}?`);\n                if(confirmation) {\n                    console.log('Updating new number');\n                    personService.update(duplicate[0].id, personObj).then( result => {\n                        refreshAll();\n                        createNotif(`${newName}'s number has been updated`);\n                    }).catch(err => {\n                        createError(`${newName} could not be updated, likely removed from server aleady.`)\n                    });\n                }\n            }\n        } else {    // add new record\n            personService.create(personObj).then(result => {\n                setPersons(persons.concat(result));\n                setNewName('');\n                setNewNumber('');\n                createNotif(`${personObj.name} has been added`);\n            }).catch(err => {\n                createError(`${personObj.name} could not be added, server issue`);\n            });\n        }\n    }\n\n    const handleDelete = (id) => {\n        const result = window.confirm(`Delete ${(persons.find(element => element.id === id)).name}'s record?`);\n        if(result) {\n            console.log('Delete: ', id);\n            personService.remove(id).then(request => {\n                refresh();\n            });\n        }\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(event.target.value);\n        setNewFilter(event.target.value);\n    }\n\n    //effects\n    useEffect(() => {\n        console.log('Fetching data ... ');\n        personService\n            .getAll()\n            .then(numbers => {\n                setPersons(numbers);\n            })\n    }, []) // empty array tells it to only run initially\n\n    //helpers\n    const refresh = () => {\n        personService.getAll().then(result => {\n            setPersons(result);\n        });\n    }\n\n    const refreshAll = () => {\n        refresh();\n        setNewName('');\n        setNewNumber('');\n    }\n\n    const createNotif = (message) => {\n        setNotif(message);\n        setTimeout(() => {setNotif(null)}, 5000) // 2 seconds\n    }\n\n    const createError = (message) => {\n        setError(message);\n        setTimeout(() => {setError(null)}, 5000);\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notif}/>\n            <Error message={error} />\n            <Filter input={newFilter} inputHandler={handleFilterChange}/>\n            <h2>Add New:</h2>\n            <form onSubmit={handleSubmit}>\n                <FormField title=\"Name\" input={newName} inputHandler={handleNameChange} />\n                <FormField title=\"Number\" input={newNumber} inputHandler={handleNumberChange} />\n                <div>\n                <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            <People persons={persons} filter={newFilter} deleteHandler={handleDelete} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render( <App/>, document.getElementById('root') );"],"sourceRoot":""}